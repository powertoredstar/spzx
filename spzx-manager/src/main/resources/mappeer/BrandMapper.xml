<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="xiaoxin.spzx.manager.mapper.BrandMapper">
    <resultMap id="brandMap" type="xiaoxin.spzx.model.entity.product.Brand" autoMapping="true">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id,name,logo,create_time,update_time,is_deleted
    </sql>
    <insert id="save">
        insert into brand(
        id,
        name,
        logo,
        create_time,
        update_time,
        is_deleted) values(
        #{id},
        #{name},
        #{logo},
        now(),
        now(),
        0
        )
    </insert>
    <update id="updateById">
        update brand set
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="logo != null and logo != ''">
            logo = #{logo},
        </if>
        update_time = now()
        where id = #{id}
    </update>
    <update id="deleteById">
        update brand set
        update_time = now(),
        is_delete = 1
        where id = #{id}
    </update>
    <select id="findByPage" resultMap="brandMap">
        select <include refid="columns"></include>
        from brand
        where is_deleted = 0
        order by id desc
    </select>
    <select id="findAll" resultType="xiaoxin.spzx.model.entity.product.Brand">
        select <include refid="columns">
    </include>
        from brand
        where is_deleted = 0
        order by id desc
    </select>
</mapper>